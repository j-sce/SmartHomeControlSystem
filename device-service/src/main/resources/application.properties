spring.application.name=device-service

## Human properties
#spring.datasource.url=jdbc:mysql://localhost:3306/smart_home_db
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.username=root
#spring.datasource.password=root
#spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.hibernate.dialect=org.hibernate.dialect.MySQLDialect

## Docker properties
spring.datasource.url=jdbc:mysql://db:3306/${MYSQL_DATABASE}
spring.datasource.username=root
spring.datasource.password=${MYSQL_ROOT_PASSWORD:db-wrz2z}
spring.datasource.initialization-mode=always
spring.datasource.initialize=true
spring.datasource.continue-on-error=true
spring.jpa.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.ddl-auto=none
spring.jpa.hibernate.show-sql=true

## Create SQL script with JPA
#spring.jpa.properties.jakarta.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.jakarta.persistence.schema-generation.scripts.create-target=create.sql
#spring.jpa.properties.jakarta.persistence.schema-generation.scripts.create-source=metadata

## Human API properties
#weather.data.api.url=http://localhost:9094/api/weather
#scenario.api.url=http://localhost:9093/api/scenario/device
#auth.api.url=http://localhost:9091/api/auth/token/validate

## Docker API properties
weather.data.api.url=http://weatherservice:9094/api/weather
scenario.api.url=http://scenarioservice:9093/api/scenario/device
auth.api.url=http://userservice:9091/api/auth/token/validate

server.port=9092


